name: CI/CD for Backend

# This workflow will run on every push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # First job to run tests
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Make sure to have requirements.txt with your dependencies

      # Step 4: Run tests
      - name: Run tests
        run: |
          python -m unittest discover  # Adjust this command based on your test framework

  # Second job to deploy using Terraform after tests pass
  deploy:
    # Deploy only if the test job succeeds
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 3: Configure AWS credentials (from GitHub Secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Adjust this to your AWS region

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Step 5: Apply Terraform configuration
      - name: Apply Terraform
        run: terraform apply -auto-approve

      # Optionally, run `terraform destroy` in a separate workflow or job if you want to clean up resources.

